#header()

package ${package}.commands;
#set($command = $helper.getByName($command-name, $robot))

import edu.wpi.first.wpilibj.command.AutoSpreadsheetCommand;
import edu.wpi.first.wpilibj.command.BBCommand;
import ${package}.Robot;

/**
 *
 */
public class  #class($command.name) extends BBCommand implements AutoSpreadsheetCommand{

    public #class($command.name)() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

#@autogenerated_code("requires", "        ")
#parse("${exporter-path}Command-requires.java")
#end
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }

    /**
     * The first parameter in the AutoSpreadsheet. This should be overridden by
     * the AutoSpreadSheetCommand to do something useful.
     * @param param1 
     */
    public void setParam1(double param1) {
    }
 
    /**
     * The second parameter in the AutoSpreadsheet. This should be overridden by
     * the AutoSpreadSheetCommand to do something useful.
     * @param param2 
     */
    public void setParam2(double param2) {
    }

    /**
     * The third parameter in the AutoSpreadsheet. This should be overridden by
     * the AutoSpreadSheetCommand to do something useful.
     * @param param3 
     */
    public void setParam3(double param3) {
    }

    /**
     * Determines whether the command should stop commanding its action at the
     * end of the command, or continue (used for things like PID)
     * @param stopAtEnd
     */
    public void setStopAtEnd(boolean stopAtEnd) {
    }

}
